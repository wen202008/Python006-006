1、以淘宝购物和结账功能为例，rabbitmq使用场景：
        电商网站同一时刻有大量下单，rabbitmq创建一个队列来和后台处理系统异步通信，减少压力。
    后台处理系统同一时刻处理少量的下单请求。
        使用rabbitmq创建topic，  客户结账后，发布消息到topic，后台处理系统订阅消息，
    清空购物车、生成订单、发送信息通知客户结果 可以并行处理

2、如何避免消息重复投递或重复消费？
可以给每条消息设置一个全局id，然后每条消息消费后存入redis，以全局id作为主键。重复的消息无法存入redis

3、交换机 fanout、direct、topic 有什么区别？
fanout：一对多
        一个发送到exchange的消息都会被转发到与该exchange绑定的所有队列上。很像广播子网，每台子网内的主机都获得了一份复制的消息

direct：一对一
        需要将一个队列绑定到exchange上面，标记这个队列的消息才会发送这个队列

topic：多对一
       多个交换机到一个队列上，路由键把消息发到指定的队列

4、架构中引入消息队列是否利大于弊？你认为消息队列有哪些缺点？
   消息队列本质上是一个巨大的缓冲区，当业务需要 异步处理、流量控制、上下游服务解耦，可以考虑引入消息队列
   缺点：
   1、系统可用性降低，如果mq挂掉，整个系统就都不行了
   2、系统复杂度提高，如何处理消息重复消费、消息传递顺序性、消息丢失问题
   3、一致性问题，可能存在A系统处理完请求直接返回成功，但是在BCD三个系统那里，BD 两个系统写库成功了，结果C系统写库失败了，造成数据不一致问题